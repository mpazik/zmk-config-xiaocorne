/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define COMBO_TIMEOUT 60
#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define HYPERLAND   3
#define DANGER  4

/ {
    combos {
        compatible = "zmk,combos";
    };
};

&caps_word { continue-list = <UNDERSCORE MINUS BACKSPACE DELETE HOME END LEFT RIGHT>; };

&kscan0 { debounce-period = <20>; };

/ {
    behaviors {
        bh: layer_taps {
            compatible = "zmk,behavior-hold-tap";
            label = "Layer-Tap";
            #binding-cells = <2>;
            tapping_term_ms = <215>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <170>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        sm: shift_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <170>;
            quick_tap_ms = <0>;
            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp A  &kp Q        &kp W  &kp E         &kp R            &kp T        &kp Y      &kp U    &kp I           &kp O    &kp P           &kp A
&kp B  &kp A        &kp S  &kp D         &kp F            &kp G        &kp H      &kp J    &kp K           &kp L    &bh 3 SEMI      &kp B
&kp C  &mt LSHFT Z  &kp X  &kp C         &kp V            &kp B        &kp N      &kp M    &kp COMMA       &kp DOT  &mt RSHFT FSLH  &kp C
                           &bootloader   &mt LCMD ESCAPE  &kp SPACE    &kp ENTER  &kp TAB  &kp D
            >;

            label = "BASE";
        };

        numbers {
            bindings = <
&trans  &kp F1   &kp F2   &kp F3   &kp F4   &kp F5     &kp MINUS  &kp N7  &kp N8  &kp N9  &kp BSPC         &trans
&trans  &kp F6   &kp F7   &kp F8   &kp F9   &kp F10    &kp PLUS   &kp N4  &kp N5  &kp N6  &bh 4 BACKSLASH  &trans
&trans  &kp F11  &kp F12  &kp F13  &kp F14  &kp F15    &kp N0     &kp N1  &kp N2  &kp N3  &kp LC(RET)      &trans
                          &trans   &trans   &trans     &trans     &trans  &trans
            >;

            label = "Numbers";
        };

        raise_layer {
            bindings = <
&trans  &kp EXCL  &kp AT     &kp HASH   &kp DLLR      &kp PRCNT            &kp CARET    &kp AMPS       &kp KP_MULTIPLY   &kp LPAR           &kp RPAR    &trans
&trans  &kp TAB   &kp CAPS   &kp F13    &out OUT_TOG  &kp LGUI             &bh 0 MINUS  &bh 1 EQUAL    &bh 2 LEFT_BRACE  &bh 3 RIGHT_BRACE  &bh 4 PIPE  &trans
&trans  &kp ESC   &kp GRAVE  &kp QMARK  &kp F9        &kp F17              &kp UNDER    &kp PLUS       &kp LBKT          &kp RBKT           &kp BSLH    &trans
                             &kp LCTRL  &kp LALT      &mt LSHFT LS(INS)    &kp RET      &kp SEMICOLON  &mt RALT TILDE
            >;

            label = "Symbols";
        };

        nav {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_NXT  &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LG(Q)     &kp LG(F)     &kp LG(E)   &trans  &trans       &to 0   &to 1   &to 2   &to 3   &to 4   &trans
&trans  &kp LG(R)     &kp LG(D)     &trans      &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans
                                    &trans      &trans  &kp LG(C)    &trans  &trans  &trans
            >;
        };

        system_layer {
            bindings = <
&trans       &bootloader  &kp AT  &kp HASH       &kp C_BRI_UP   &kp C_VOLUME_UP      &kp C_VOL_UP   &kp C_BRI_UP   &none          &kp LC(LA(DEL))  &bootloader  &trans
&bootloader  &trans       &trans  &kp LC(LSHFT)  &kp C_BRI_DEC  &kp C_VOLUME_DOWN    &kp C_VOL_DN   &kp C_BRI_DEC  &trans         &kp UP           &kp SEMI     &trans
&trans       &kp LNLCK    &trans  &kp LEFT       &kp DOWN       &kp K_MUTE           &kp C_MUTE     &trans         &kp LEFT       &kp DOWN         &kp RIGHT    &trans
                                  &kp LG(Z)      &kp LG(X)      &kp LG(C)            &kp LC(LA(W))  &kp LC(LA(P))  &kp LC(LA(R))
            >;
        };
    };
};

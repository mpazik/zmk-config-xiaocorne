/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define COMBO_TIMEOUT 60
#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define HYPERLAND   3
#define DANGER  4

/ {
    combos { compatible = "zmk,combos"; };
};

&caps_word { continue-list = <UNDERSCORE MINUS BACKSPACE DELETE HOME END LEFT RIGHT>; };

&kscan0 { debounce-period = <20>; };

/ {
    behaviors {
        bh: layer_taps {
            compatible = "zmk,behavior-hold-tap";
            label = "Layer-Tap";
            #binding-cells = <2>;
            tapping_term_ms = <215>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <170>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        sm: shift_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <170>;
            quick_tap_ms = <0>;
            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
            // |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
            // |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
            //             | GUI | LWR | ENT |   | SPC | RSE  | ALT |

            bindings = <
&kp TAB     &kp Q        &kp W  &kp E         &kp R                 &kp T        &kp Y      &kp U         &kp I          &kp O    &kp P            &kp BACKSLASH
&kp ESCAPE  &kp A        &kp S  &kp D         &kp F                 &kp G        &kp H      &kp J         &kp K          &kp L    &bh 2 SEMICOLON  &kp SQT
&kp LSHFT   &mt LSHFT Z  &kp X  &kp C         &kp V                 &kp B        &kp N      &kp M         &kp COMMA      &kp DOT  &mt RSHFT FSLH   &kp RSHFT
                                &kp LEFT_ALT  &mt LEFT_COMMAND TAB  &kp SPACE    &kp ENTER  &lt 1 ESCAPE  &kp RIGHT_ALT
            >;

            label = "BASE";
        };

        raise_layer {
            bindings = <
&kp GRAVE   &kp N1  &kp N2  &kp N3    &kp N4    &kp N5       &kp N6     &kp N7     &kp N9    &kp N0    &kp BSLH  &none
&kp ESC     &kp F1  &kp F2  &kp F3    &kp F4    &kp F5       &kp N8     &kp MINUS  &kp LBKT  &kp RBKT  &kp SQT   &none
&kp LSHIFT  &kp F6  &kp F7  &kp F8    &kp F9    &kp F10      &kp UNDER  &kp UNDER  &kp LT    &kp GT    &kp FSLH  &none
                            &kp LALT  &kp LCMD  &kp SPACE    &kp ENTER  &none      &kp RALT
            >;

            label = "Symbols";
        };

        navigation {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp DEL        &kp LBKT    &kp UP    &kp RBKT   &none  &bootloader
&trans  &trans  &trans  &trans  &trans  &trans    &kp BACKSPACE  &kp LEFT    &kp DOWN  &kp RIGHT  &none  &none
&trans  &trans  &trans  &trans  &trans  &trans    &none          &none       &none     &none      &none  &none
                        &trans  &trans  &trans    &kp ENTER      &kp ESCAPE  &none
            >;
        };

        system {
            bindings = <
&bootloader  &kp TAB     &bt BT_NXT  &kp C_BRI_UP      &kp C_VOL_UP  &kp C_NEXT    &kp STAR   &kp N7  &kp N8   &kp N9  &none      &kp K_LOCK
&kp ESC      &kp ESCAPE  &bt BT_PRV  &kp LC(C_BRI_DN)  &kp C_VOL_DN  &kp C_PREV    &kp MINUS  &kp N4  &kp N5   &kp N6  &none      &kp LANG1
&kp LSHIFT   &kp LSHFT   &bt BT_CLR  &kp C_BRI_AUTO    &kp C_MUTE    &kp C_PP      &kp PLUS   &kp N1  &kp N2   &kp N3  &kp SLASH  &kp LANG2
                                     &kp LALT          &kp LCMD      &none         &kp ENTER  &kp N0  &kp DOT
            >;

            label = "**DANGER**";
        };
    };
};
